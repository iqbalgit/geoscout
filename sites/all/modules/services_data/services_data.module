<?php
function services_data_services_resources() {
	return array(
		'node_create_custom' => array(
			'create' => array(
				'callback' => '_services_create_node',
				'access callback' => TRUE,
				'args' => array(
					array(
						'name' => 'node',
						'optional' => FALSE,
						'source' => 'data',
						'description' => 'The node data to create',
						'type' => 'array',
					),
				),
			),
		),
	);
}

function _services_create_node($arg) {
	// Minimally there needs to be something submitted
	if($arg) {
	// Create the node
		$node = new stdClass();
		$node->type = 'geo_tag';
		$node->title = 'TITLE';
		$node->language = LANGUAGE_NONE;
		$node->uid = 0;
		node_object_prepare($node);
		$map = array(
			'body' => 'body', //Content type different fileds machine name,
		);
		// What predefined args have been passed?
		$arr1 = array_intersect_key($arg, $map);
		// Build an array associating Drupal fieldnames to arg values
		foreach($arr1 as $key => $value) {
			$field = $map[$key];
			$newarr[$field] = $value;
		}
		// What undefined (ie. unknown) args have been passed?
		$arr2 = array_diff_key($arg, $map);
		// Associate unknown arg values with the Drupal general field
		foreach($arr2 as $key => $value) {
			if(isset($newarr['field_s2s_general'])) {
				$newarr['field_s2s_general'] .= $key . " | " . $value . "\n";
			} 
			else {
				$newarr['field_s2s_general'] = $key . " | " . $value . "\n";
			}
		}
		// Save all arg values as Drupal fields
		foreach($newarr AS $key => $value) {
			$node->{$key}[$node->language][0]['value'] = $value;
		}
		// If there's a file, save it to a Drupal field
		if($_FILES['image']['name']) {
			$file_saved = file_save_data(fopen($_FILES['image']['tmp_name'], 'r'), file_default_scheme() . "://" . $_FILES['image']['name']);
			file_usage_add($file_saved, 'sprout_send_to_sprout', 'files', $file_saved->fid);
			$node->field_s2s_image[$node->language][0] = (array)$file_saved;
		}
		// Save the node
		$node = node_submit($node);
		node_save($node);
		$node_id = $node->nid;
		return $node_id;
	} 
	else {
		// Error if no args were passed
		return services_error(t('No data submitted!'), 406, t('No data submitted!'));
	}
}
		
